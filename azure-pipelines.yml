trigger:
  - main

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: NuGetAuthenticate@1
      displayName: 'NuGet Authenticate'
    
    - task: UseDotNet@2
      inputs:
        version: '8.x'
        includePreviewVersions: false
        
    - task: NuGetToolInstaller@1
      displayName: 'Install NuGet'

    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
        command: 'restore'
        restoreSolution: '$(solution)'
        feedsToUse: 'config'
        nugetConfigPath: 'nuget.config'

    - task: DotNetCoreCLI@2
      displayName: 'Build'
      inputs:
        command: 'build'
        projects: '$(solution)'
        arguments: '--configuration $(buildConfiguration)'

    # Clean the publish directory
    - task: DeleteFiles@1
      displayName: 'Clean publish directory'
      inputs:
        SourceFolder: '$(Build.ArtifactStagingDirectory)'
        Contents: '**/*'

    # Publish Function App
    - task: DotNetCoreCLI@2
      displayName: 'Publish Function App'
      inputs:
        command: publish
        publishWebProjects: false
        projects: '**/DopamineDetoxFunction.csproj'
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)/publish /p:GenerateRuntimeConfigurationFiles=true'
        zipAfterPublish: false
        modifyOutputPath: false

    # Copy host.json and local.settings.json
    - task: CopyFiles@2
      displayName: 'Copy Function Configurations'
      inputs:
        SourceFolder: '$(Build.ArtifactStagingDirectory)/publish'
        Contents: |
          **/host.json
          **/local.settings.json
          **/Core14.profile.xml
        TargetFolder: '$(Build.ArtifactStagingDirectory)/functions'
        flattenFolders: false

    # Create the deployment package
    - task: ArchiveFiles@2
      displayName: 'Create Function App Zip'
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/publish'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: DeployToTest
  dependsOn: Build
  condition: succeeded()
  variables:
    - group: SMD-Test-Variables
  jobs:
  - deployment: Deploy
    environment: 'test'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureKeyVault@2
            inputs:
              azureSubscription: 'SMD-KeyVault'
              KeyVaultName: 'test-key-vault-v2'
              SecretsFilter: 'SMD--AzureSignalRConnectionString,SMD--YouTubeApiKey,ProjectDb--SQL-DefaultConnectionString'
              RunAsPreJob: false

          - task: AzureAppServiceManage@0
            displayName: 'Stop Function App'
            inputs:
              azureSubscription: 'SocialMediaDetoxConnection'
              Action: 'Stop Azure App Service'
              WebAppName: 'smd-function-test'
              SpecifySlotOrASE: false

          - task: AzureAppServiceSettings@1
            displayName: 'Configure Function App Settings'
            inputs:
              azureSubscription: 'SocialMediaDetoxConnection'
              appName: 'smd-function-test'
              resourceGroupName: 'social-media-detox'
              appSettings: |
                {
                  "FUNCTIONS_WORKER_RUNTIME": "dotnet-isolated",
                  "DOTNET_ISOLATED_RUNTIME_VERSION": "8.0",
                  "FUNCTIONS_EXTENSION_VERSION": "~4",
                  "WEBSITE_USE_PLACEHOLDER_DOTNETISOLATED": "1",
                  "WEBSITE_RUN_FROM_PACKAGE": "1"
                }

          - task: AzureFunctionApp@2
            displayName: 'Deploy Function App'
            inputs:
              azureSubscription: 'SocialMediaDetoxConnection'
              appType: 'functionApp'
              appName: 'smd-function-test'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              deploymentMethod: 'zipDeploy'
              resourceGroupName: 'social-media-detox'

          - task: AzureAppServiceManage@0
            displayName: 'Start Function App'
            inputs:
              azureSubscription: 'SocialMediaDetoxConnection'
              Action: 'Start Azure App Service'
              WebAppName: 'smd-function-test'
              SpecifySlotOrASE: false

- stage: DeployToProduction
  dependsOn: DeployToTest
  condition: succeeded()
  variables:
    - group: SMD-Prod-Variables
  jobs:
  - deployment: Deploy
    environment: 'production'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureKeyVault@2
            inputs:
              azureSubscription: 'SMD-KeyVault'
              KeyVaultName: 'prod-key-vault-v1'
              SecretsFilter: 'SMD--AzureSignalRConnectionString,SMD--YouTubeApiKey,ProjectDb--SQL-DefaultConnectionString'
              RunAsPreJob: false

          - task: AzureAppServiceManage@0
            displayName: 'Stop Function App'
            inputs:
              azureSubscription: 'SocialMediaDetoxConnection'
              Action: 'Stop Azure App Service'
              WebAppName: 'smd-function-prod'
              SpecifySlotOrASE: false

          - task: AzureAppServiceSettings@1
            displayName: 'Configure Function App Settings'
            inputs:
              azureSubscription: 'SocialMediaDetoxConnection'
              appName: 'smd-function-prod'
              resourceGroupName: 'social-media-detox'
              appSettings: |
                {
                  "FUNCTIONS_WORKER_RUNTIME": "dotnet-isolated",
                  "DOTNET_ISOLATED_RUNTIME_VERSION": "8.0",
                  "FUNCTIONS_EXTENSION_VERSION": "~4",
                  "WEBSITE_USE_PLACEHOLDER_DOTNETISOLATED": "1",
                  "WEBSITE_RUN_FROM_PACKAGE": "1"
                }

          - task: AzureFunctionApp@2
            displayName: 'Deploy Function App'
            inputs:
              azureSubscription: 'SocialMediaDetoxConnection'
              appType: 'functionApp'
              appName: 'smd-function-prod'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              deploymentMethod: 'zipDeploy'
              resourceGroupName: 'social-media-detox'

          - task: AzureAppServiceManage@0
            displayName: 'Start Function App'
            inputs:
              azureSubscription: 'SocialMediaDetoxConnection'
              Action: 'Start Azure App Service'
              WebAppName: 'smd-function-prod'
              SpecifySlotOrASE: false