trigger:
  - main

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: NuGetAuthenticate@1
      displayName: 'NuGet Authenticate'
    
    - task: UseDotNet@2
      inputs:
        version: '8.x'
        includePreviewVersions: false
        
    - task: NuGetToolInstaller@1
      displayName: 'Install NuGet'

    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
        command: 'restore'
        restoreSolution: '$(solution)'
        feedsToUse: 'config'
        nugetConfigPath: 'nuget.config'

    - task: DotNetCoreCLI@2
      displayName: 'Build'
      inputs:
        command: 'build'
        projects: '$(solution)'
        arguments: '--configuration $(buildConfiguration)'

    # Copy local.settings.json and Core14.profile.xml
    - task: CopyFiles@2
      displayName: 'Copy Configuration Files'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          **/local.settings.json
          **/Core14.profile.xml
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        flattenFolders: false

    # Modified publish task
    - task: DotNetCoreCLI@2
      displayName: 'Publish'
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/DopamineDetoxFunction.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/publish /p:GenerateRuntimeConfigurationFiles=true'
        modifyOutputPath: false
        zipAfterPublish: false

    # Create the deployment package
    - task: ArchiveFiles@2
      displayName: 'Create Function Zip'
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/publish/DopamineDetoxFunction'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/DopamineDetoxFunction.zip'
        replaceExistingArchive: true

    # Add explicit PowerShell task to verify files
    - task: PowerShell@2
      displayName: 'Verify Build Output'
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "Listing contents of publish directory:"
          Get-ChildItem -Path "$(Build.ArtifactStagingDirectory)/publish" -Recurse | ForEach-Object { Write-Host $_.FullName }
          
          Write-Host "Listing contents of zip file:"
          Add-Type -AssemblyName System.IO.Compression.FileSystem
          $zip = [System.IO.Compression.ZipFile]::OpenRead("$(Build.ArtifactStagingDirectory)/DopamineDetoxFunction.zip")
          $zip.Entries | ForEach-Object { Write-Host $_.FullName }
          $zip.Dispose()

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifacts'
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'drop'

- stage: DeployToTest
  dependsOn: Build
  condition: succeeded()
  variables:
    - group: SMD-Test-Variables
  jobs:
  - deployment: Deploy
    environment: 'test'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureKeyVault@2
            inputs:
              azureSubscription: 'SMD-KeyVault'
              KeyVaultName: 'test-key-vault-v2'
              SecretsFilter: 'SMD--AzureSignalRConnectionString,SMD--YouTubeApiKey,ProjectDb--SQL-DefaultConnectionString'
              RunAsPreJob: false

          - task: AzureAppServiceManage@0
            displayName: 'Stop Function App'
            inputs:
              azureSubscription: 'SocialMediaDetoxConnection'
              Action: 'Stop Azure App Service'
              WebAppName: 'smd-function-test'
              SpecifySlotOrASE: false
              
          - task: AzureFunctionApp@2
            inputs:
              azureSubscription: 'SocialMediaDetoxConnection'
              appName: 'smd-function-test'
              appType: 'functionApp'
              package: '$(Pipeline.Workspace)/drop/DopamineDetoxFunction.zip'
              deploymentMethod: 'zipDeploy'
              enableGoogleAnalytics: false
              
          - task: AzureAppServiceManage@0
            displayName: 'Start Function App'
            inputs:
              azureSubscription: 'SocialMediaDetoxConnection'
              Action: 'Start Azure App Service'
              WebAppName: 'smd-function-test'
              SpecifySlotOrASE: false

- stage: DeployToProduction
  dependsOn: DeployToTest
  condition: succeeded()
  variables:
    - group: SMD-Prod-Variables
  jobs:
  - deployment: Deploy
    environment: 'production'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureKeyVault@2
            inputs:
              azureSubscription: 'SMD-KeyVault'
              KeyVaultName: 'prod-key-vault-v1'
              SecretsFilter: 'SMD--AzureSignalRConnectionString,SMD--YouTubeApiKey,ProjectDb--SQL-DefaultConnectionString'
              RunAsPreJob: false

          - task: AzureAppServiceManage@0
            displayName: 'Stop Function App'
            inputs:
              azureSubscription: 'SocialMediaDetoxConnection'
              Action: 'Stop Azure App Service'
              WebAppName: 'smd-function-prod'
              SpecifySlotOrASE: false
              
          - task: AzureFunctionApp@2
            inputs:
              azureSubscription: 'SocialMediaDetoxConnection'
              appName: 'smd-function-prod'
              appType: 'functionApp'
              package: '$(Pipeline.Workspace)/drop/DopamineDetoxFunction.zip'
              deploymentMethod: 'zipDeploy'
              enableGoogleAnalytics: false
              
          - task: AzureAppServiceManage@0
            displayName: 'Start Function App'
            inputs:
              azureSubscription: 'SocialMediaDetoxConnection'
              Action: 'Start Azure App Service'
              WebAppName: 'smd-function-prod'
              SpecifySlotOrASE: false